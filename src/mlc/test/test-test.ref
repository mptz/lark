Testing un-evaluated tests
form: [p. a | b]
norm: [p. a | b]
======================================================================
form: [p + 1. a | b]
norm: [p + 1. a | b]
======================================================================
form: [x? [x. a | b]]
norm: [x? [x. a | b]]
======================================================================
form: [x, y? [x; y. a | b]]
norm: [x, y? [x; y. a | b]]
======================================================================
form: [[x? x]. a | b]
norm: [[x? x]. a | b]
======================================================================
form: [[x? x; 5] (3 + 3). a | b]
norm: [6; 5. a | b]
======================================================================
Testing test evaluation
form: [0. fail | pass]
norm: pass
======================================================================
form: [1. pass | fail]
norm: pass
======================================================================
form: [1 - 1. fail | pass]
norm: pass
======================================================================
form: [0 + 1. pass | fail]
norm: pass
======================================================================
form: [[x? x] (0). fail | pass]
norm: pass
======================================================================
form: [[x? x] (1). pass | fail]
norm: pass
======================================================================
form: [[0. 0 | 1]. pass | fail]
norm: pass
======================================================================
form: [[0. 0 | 1] - 1. fail | pass]
norm: pass
======================================================================
form: [0. [x, y? x] | [x, y? y]] (fail, pass)
norm: pass
======================================================================
Testing tests with primitives
form: [0 == 0. pass | fail]
norm: pass
======================================================================
form: [0 == 1. fail | pass]
norm: pass
======================================================================
form: [1 == 1. pass | fail]
norm: pass
======================================================================
form: [1 == 2. fail | pass]
norm: pass
======================================================================
form: [2 == 1 + 1. pass | fail]
norm: pass
======================================================================
form: [1 + 1 == 2. pass | fail]
norm: pass
======================================================================
form: [0 != 0. fail | pass]
norm: pass
======================================================================
form: [0 != 1. pass | fail]
norm: pass
======================================================================
form: [1 != 1. fail | pass]
norm: pass
======================================================================
form: [1 != 2. pass | fail]
norm: pass
======================================================================
form: [2 != 1 + 1. fail | pass]
norm: fail
======================================================================
form: [1 + 1 != 2. fail | pass]
norm: pass
======================================================================
Testing test-node substitution and copying
form: [f, x? f (x)] ([y? [y. pass | fail]], 0 + 1)
norm: pass
======================================================================
form: [toggle? 1; toggle; toggle; toggle; toggle] ([b? [b. 0 | 1]])
norm: 1
======================================================================
