Testing digit <-> prime conversions
form: $fill (9, [d. digit-to-prime (d + 1)])
norm: [2 | 3 | 5 | 7 | 11 | 13 | 17 | 19 | 23]
======================================================================
form: prime-to-digit (2)
norm: 1
======================================================================
form: prime-to-digit (3)
norm: 2
======================================================================
form: prime-to-digit (5)
norm: 3
======================================================================
form: prime-to-digit (7)
norm: 4
======================================================================
form: prime-to-digit (11)
norm: 5
======================================================================
form: prime-to-digit (13)
norm: 6
======================================================================
form: prime-to-digit (17)
norm: 7
======================================================================
form: prime-to-digit (19)
norm: 8
======================================================================
form: prime-to-digit (23)
norm: 9
======================================================================
Testing square representation
form: unconstrained
norm: 223092870
======================================================================
form: $fill (9, [i. square-containing ([i + 1])])
norm: [2 | 3 | 5 | 7 | 11 | 13 | 17 | 19 | 23]
======================================================================
form: [square-containing (all-digits) == unconstrained? #pass | #fail]
norm: #pass
======================================================================
Testing constraint application
form: odd-square
norm: 43010
======================================================================
form: even-square
norm: 5187
======================================================================
form: constrain-square (odd-square, digit-to-prime (2))
norm: 43010
======================================================================
form: constrain-square (odd-square, digit-to-prime (4))
norm: 43010
======================================================================
form: constrain-square (odd-square, digit-to-prime (6))
norm: 43010
======================================================================
form: constrain-square (odd-square, digit-to-prime (8))
norm: 43010
======================================================================
form: constrain-square (digit-to-prime (1), digit-to-prime (9)); prime-to-digit
norm: 1
======================================================================
form: constrain-square (digit-to-prime (2), digit-to-prime (3)); prime-to-digit
norm: 2
======================================================================
form: constrain-square (digit-to-prime (7), digit-to-prime (5)); prime-to-digit
norm: 7
======================================================================
form: constrain-square (digit-to-prime (8), digit-to-prime (1)); prime-to-digit
norm: 8
======================================================================
form: constrain-square (digit-to-prime (9), digit-to-prime (2)); prime-to-digit
norm: 9
======================================================================
form: constrain-square (1, digit-to-prime (2))
norm: 1
======================================================================
form: constrain-square (1, digit-to-prime (3))
norm: 1
======================================================================
form: constrain-square (1, digit-to-prime (5))
norm: 1
======================================================================
form: constrain-square (1, digit-to-prime (9))
norm: 1
======================================================================
form: constrain-square (odd-square, digit-to-prime (1))
norm: 21505
======================================================================
form: constrain-square (odd-square, digit-to-prime (3))
norm: 8602
======================================================================
form: constrain-square (odd-square, digit-to-prime (5))
norm: 3910
======================================================================
form: constrain-square (odd-square, digit-to-prime (7))
norm: 2530
======================================================================
form: constrain-square (odd-square, digit-to-prime (9))
norm: 1870
======================================================================
form: constrain-check-solve (5, 6, 5)
norm: 6
======================================================================
form: constrain-check-solve (1, 2, 2)
norm: 1
======================================================================
form: constrain-check-solve (8, 9, 8)
norm: 9
======================================================================
form: constrain-check-solve (3, 4, 4)
norm: 3
======================================================================
form: $fill (9, [i. let {sq := digit-to-prime (i + 1)} constrain-square (sq, sq)])
norm: [1 | 1 | 1 | 1 | 1 | 1 | 1 | 1 | 1]
======================================================================
form: $fill (50, square-solution)
norm: [0 | 0 | 1 | 2 | 0 | 3 | 0 | 4 | 0 | 0 | 0 | 5 | 0 | 6 | 0 | 0 | 0 | 7 | 0 | 8 | 0 | 0 | 0 | 9 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0]
======================================================================
Testing possibility testing
form: square-possibilities (unconstrained)
norm: [23 | [19 | [17 | [13 | [11 | [7 | [5 | [3 | [2 | []]]]]]]]]]
======================================================================
form: square-possibilities (23 * 11 * 7 * 5)
norm: [23 | [11 | [7 | [5 | []]]]]
======================================================================
form: square-possibilities (3 * 2)
norm: [3 | [2 | []]]
======================================================================
form: square-possibilities (17)
norm: [17 | []]
======================================================================
form: square-possibilities (1)
norm: []
======================================================================
Testing grid representation
form: [grid-grand-sum (grid-row-indexes) == grid-index-sum? #pass | #fail]
norm: #pass
======================================================================
form: [grid-grand-sum (grid-col-indexes) == grid-index-sum? #pass | #fail]
norm: #pass
======================================================================
form: [grid-grand-sum (grid-box-indexes) == grid-index-sum? #pass | #fail]
norm: #pass
======================================================================
form: [grid-grand-sum (grid-groups) == 3 * grid-index-sum? #pass | #fail]
norm: #pass
======================================================================
form: # gather-peers (0)
norm: 27
======================================================================
form: # gather-peers (22)
norm: 27
======================================================================
form: # gather-peers (51)
norm: 27
======================================================================
form: # gather-peers (80)
norm: 27
======================================================================
Testing solving a blank grid
form: try-solve (blank-grid); grid-to-string
norm: "grid:
+---+---+---+---+---+---+---+---+---+
| 9 | 8 | 7 | 6 | 5 | 4 | 3 | 2 | 1 |
+---+---+---+---+---+---+---+---+---+
| 6 | 5 | 4 | 3 | 2 | 1 | 9 | 8 | 7 |
+---+---+---+---+---+---+---+---+---+
| 3 | 2 | 1 | 9 | 8 | 7 | 6 | 5 | 4 |
+---+---+---+---+---+---+---+---+---+
| 8 | 7 | 9 | 4 | 3 | 6 | 2 | 1 | 5 |
+---+---+---+---+---+---+---+---+---+
| 2 | 3 | 5 | 1 | 9 | 8 | 7 | 4 | 6 |
+---+---+---+---+---+---+---+---+---+
| 4 | 1 | 6 | 5 | 7 | 2 | 8 | 9 | 3 |
+---+---+---+---+---+---+---+---+---+
| 7 | 9 | 3 | 8 | 4 | 5 | 1 | 6 | 2 |
+---+---+---+---+---+---+---+---+---+
| 5 | 6 | 8 | 2 | 1 | 3 | 4 | 7 | 9 |
+---+---+---+---+---+---+---+---+---+
| 1 | 4 | 2 | 7 | 6 | 9 | 5 | 3 | 8 |
+---+---+---+---+---+---+---+---+---+
"
======================================================================
Testing solving an impossible grid
form: try-solve (impossible-grid)
norm: []
======================================================================
Testing constraint-propagation-only solving
form: try-solve (easy-grid); grid-to-string
norm: "grid:
+---+---+---+---+---+---+---+---+---+
| 4 | 8 | 3 | 9 | 2 | 1 | 6 | 5 | 7 |
+---+---+---+---+---+---+---+---+---+
| 9 | 6 | 7 | 3 | 4 | 5 | 8 | 2 | 1 |
+---+---+---+---+---+---+---+---+---+
| 2 | 5 | 1 | 8 | 7 | 6 | 4 | 9 | 3 |
+---+---+---+---+---+---+---+---+---+
| 5 | 4 | 8 | 1 | 3 | 2 | 9 | 7 | 6 |
+---+---+---+---+---+---+---+---+---+
| 7 | 2 | 9 | 5 | 6 | 4 | 1 | 3 | 8 |
+---+---+---+---+---+---+---+---+---+
| 1 | 3 | 6 | 7 | 9 | 8 | 2 | 4 | 5 |
+---+---+---+---+---+---+---+---+---+
| 3 | 7 | 2 | 6 | 8 | 9 | 5 | 1 | 4 |
+---+---+---+---+---+---+---+---+---+
| 8 | 1 | 4 | 2 | 5 | 3 | 7 | 6 | 9 |
+---+---+---+---+---+---+---+---+---+
| 6 | 9 | 5 | 4 | 1 | 7 | 3 | 8 | 2 |
+---+---+---+---+---+---+---+---+---+
"
======================================================================
form: try-solve (wikipedia-grid); grid-to-string
norm: "grid:
+---+---+---+---+---+---+---+---+---+
| 5 | 3 | 4 | 6 | 7 | 8 | 9 | 1 | 2 |
+---+---+---+---+---+---+---+---+---+
| 6 | 7 | 2 | 1 | 9 | 5 | 3 | 4 | 8 |
+---+---+---+---+---+---+---+---+---+
| 1 | 9 | 8 | 3 | 4 | 2 | 5 | 6 | 7 |
+---+---+---+---+---+---+---+---+---+
| 8 | 5 | 9 | 7 | 6 | 1 | 4 | 2 | 3 |
+---+---+---+---+---+---+---+---+---+
| 4 | 2 | 6 | 8 | 5 | 3 | 7 | 9 | 1 |
+---+---+---+---+---+---+---+---+---+
| 7 | 1 | 3 | 9 | 2 | 4 | 8 | 5 | 6 |
+---+---+---+---+---+---+---+---+---+
| 9 | 6 | 1 | 5 | 3 | 7 | 2 | 8 | 4 |
+---+---+---+---+---+---+---+---+---+
| 2 | 8 | 7 | 4 | 1 | 9 | 6 | 3 | 5 |
+---+---+---+---+---+---+---+---+---+
| 3 | 4 | 5 | 2 | 8 | 6 | 1 | 7 | 9 |
+---+---+---+---+---+---+---+---+---+
"
======================================================================
Testing backtracking solving
form: try-solve (nyt-medium-grid); grid-to-string
norm: "grid:
+---+---+---+---+---+---+---+---+---+
| 9 | 7 | 8 | 1 | 4 | 3 | 5 | 2 | 6 |
+---+---+---+---+---+---+---+---+---+
| 6 | 5 | 1 | 2 | 7 | 8 | 4 | 9 | 3 |
+---+---+---+---+---+---+---+---+---+
| 4 | 3 | 2 | 5 | 9 | 6 | 1 | 8 | 7 |
+---+---+---+---+---+---+---+---+---+
| 1 | 6 | 3 | 8 | 5 | 4 | 9 | 7 | 2 |
+---+---+---+---+---+---+---+---+---+
| 2 | 4 | 9 | 6 | 1 | 7 | 8 | 3 | 5 |
+---+---+---+---+---+---+---+---+---+
| 5 | 8 | 7 | 3 | 2 | 9 | 6 | 1 | 4 |
+---+---+---+---+---+---+---+---+---+
| 3 | 1 | 6 | 4 | 8 | 2 | 7 | 5 | 9 |
+---+---+---+---+---+---+---+---+---+
| 7 | 2 | 5 | 9 | 6 | 1 | 3 | 4 | 8 |
+---+---+---+---+---+---+---+---+---+
| 8 | 9 | 4 | 7 | 3 | 5 | 2 | 6 | 1 |
+---+---+---+---+---+---+---+---+---+
"
======================================================================
