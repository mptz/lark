#include "list.mlc"

singleton := cons (1, nil)
fruits := cons (apple, cons (banana, cons (cherry, cons (durian, nil))))

#echo "Testing basic list length"
basic-length (nil)
basic-length (singleton)
basic-length (fruits)

#echo "Testing list fold"
fold-noop := [state, elem. state]
fold (pass, fold-noop, nil)
fold (pass, fold-noop, singleton)
fold (pass, fold-noop, fruits)

|* #echo "Testing iota"

|* #echo "Testing list fold"

#echo "Testing combined list functions"
|* Test fold via sum, unfold via iota
add := [m, n. m + n]
sum := [list. fold (0, add, list)]
100; iota; sum
