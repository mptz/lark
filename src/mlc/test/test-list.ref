Testing pairs
form: car (pair)
norm: [f? [x? x; f; f; f; f]]
read: 4
======================================================================
form: cdr (pair)
norm: [f? [x? x; f; f]]
read: 2
======================================================================
Testing lists, nil, and nullp
form: nullp (nil)
norm: [x? [_? x]]
read: True
======================================================================
form: nullp (pair)
norm: [_? [y? y]]
read: False
read: 0
======================================================================
form: nullp (list)
norm: [_? [y? y]]
read: False
read: 0
======================================================================
form: list; car
norm: [f? [x? x; f; f; f]]
read: 3
======================================================================
form: list; cdr; car
norm: [f? [x? x; f; f]]
read: 2
======================================================================
Testing pred and sub
form: pred (zero)
norm: [f? [x? x]]
read: False
read: 0
======================================================================
form: pred (one)
norm: [f? [x? x]]
read: False
read: 0
======================================================================
form: pred (eight)
norm: [f? [x? x; f; f; f; f; f; f; f]]
read: 7
======================================================================
form: sub (two, two)
norm: [f? [x? x]]
read: False
read: 0
======================================================================
form: sub (seven, four)
norm: [f? [x? x; f; f; f]]
read: 3
======================================================================
Testing leq
form: leq (zero, zero)
norm: [x? [_? x]]
read: True
======================================================================
form: leq (four, two)
norm: [_? [y? y]]
read: False
read: 0
======================================================================
form: leq (two, four)
norm: [x? [_? x]]
read: True
======================================================================
form: leq (four, four)
norm: [x? [_? x]]
read: True
======================================================================
Testing lt
form: lt (zero, zero)
norm: [a? [b? b]]
read: False
read: 0
======================================================================
form: lt (four, two)
norm: [a? [b? b]]
read: False
read: 0
======================================================================
form: lt (two, four)
norm: [a? [b? a]]
read: True
======================================================================
form: lt (four, four)
norm: [a? [b? b]]
read: False
read: 0
======================================================================
Testing lists with free variables
form: fruits; car
norm: apple
======================================================================
form: fruits; cdr; car
norm: banana
======================================================================
form: fruits; cdr; cdr; car
norm: cherry
======================================================================
form: fruits; nullp
norm: [_? [y? y]]
read: False
read: 0
======================================================================
form: fruits; cdr; cdr; cdr; nullp
norm: [_? [y? y]]
read: False
read: 0
======================================================================
form: fruits; cdr; cdr; cdr; cdr; nullp
norm: [x? [_? x]]
read: True
======================================================================
Testing list length
form: length (nil)
norm: 0
======================================================================
form: length (list)
norm: 3
======================================================================
form: length (fruits)
norm: 4
======================================================================
