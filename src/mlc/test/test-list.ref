List constants
form: singleton
norm: [1 | []]
======================================================================
form: doubleton
norm: [blt | [pbj | []]]
======================================================================
form: fruits
norm: [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | []]]]]]]]
======================================================================
Testing basic list length
form: basic-length (nil)
norm: 0
======================================================================
form: basic-length (singleton)
norm: 1
======================================================================
form: basic-length (doubleton)
norm: 2
======================================================================
form: basic-length (fruits)
norm: 7
======================================================================
Testing list fold
form: fold (fold-noop, pass, nil)
norm: pass
======================================================================
form: fold (fold-noop, pass, singleton)
norm: pass
======================================================================
form: fold (fold-noop, pass, doubleton)
norm: pass
======================================================================
form: fold (fold-noop, pass, fruits)
norm: pass
======================================================================
form: fold (fold-last, pass, nil)
norm: pass
======================================================================
form: fold (fold-last, fail, singleton)
norm: 1
======================================================================
form: fold (fold-last, fail, doubleton)
norm: pbj
======================================================================
form: fold (fold-last, fail, fruits)
norm: grapefruit
======================================================================
Testing list length
form: length ([])
norm: 0
======================================================================
form: length (singleton)
norm: 1
======================================================================
form: length (doubleton)
norm: 2
======================================================================
form: length (fruits)
norm: 7
======================================================================
Testing list reverse
form: reverse ([])
norm: []
======================================================================
form: reverse (singleton)
norm: [1 | []]
======================================================================
form: reverse (doubleton)
norm: [pbj | [blt | []]]
======================================================================
form: reverse (fruits)
norm: [grapefruit | [fig | [eggplant | [durian | [cherry | [banana | [apple | []]]]]]]]
======================================================================
Testing makelist
form: makelist (0, X)
norm: []
======================================================================
form: makelist (1, Y)
norm: [Y | []]
======================================================================
form: makelist (2, Z)
norm: [Z | [Z | []]]
======================================================================
form: makelist (5, W)
norm: [W | [W | [W | [W | [W | []]]]]]
======================================================================
form: makelist (10, [])
norm: [[] | [[] | [[] | [[] | [[] | [[] | [[] | [[] | [[] | [[] | []]]]]]]]]]]
======================================================================
form: makelist (15, [x. x])
norm: [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | [[x. x] | []]]]]]]]]]]]]]]]
======================================================================
Testing iota
form: iota (0)
norm: []
======================================================================
form: iota (1)
norm: [1 | []]
======================================================================
form: iota (5)
norm: [1 | [2 | [3 | [4 | [5 | []]]]]]
======================================================================
Testing append
form: append (nil, nil)
norm: []
======================================================================
form: append (singleton, nil)
norm: [1 | []]
======================================================================
form: append (nil, singleton)
norm: [1 | []]
======================================================================
form: append (singleton, singleton)
norm: [1 | [1 | []]]
======================================================================
form: append (nil, fruits)
norm: [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | []]]]]]]]
======================================================================
form: append (fruits, nil)
norm: [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | []]]]]]]]
======================================================================
form: append (fruits, fruits)
norm: [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | []]]]]]]]]]]]]]]
======================================================================
form: append (50; iota, 50; iota); length
norm: 100
======================================================================
Testing map
form: map (id, nil)
norm: []
======================================================================
form: map (id, singleton)
norm: [1 | []]
======================================================================
form: map (id, doubleton)
norm: [blt | [pbj | []]]
======================================================================
form: map (id, fruits)
norm: [apple | [banana | [cherry | [durian | [eggplant | [fig | [grapefruit | []]]]]]]]
======================================================================
form: map (incr, nil)
norm: []
======================================================================
form: map (incr, iota (8))
norm: [2 | [3 | [4 | [5 | [6 | [7 | [8 | [9 | []]]]]]]]]
======================================================================
form: map ([n. n * n], iota (8))
norm: [1 | [4 | [9 | [16 | [25 | [36 | [49 | [64 | []]]]]]]]]
======================================================================
form: map (fib, iota (8))
norm: [1 | [1 | [2 | [3 | [5 | [8 | [13 | [21 | []]]]]]]]]
======================================================================
form: map (banana, iota (4))
norm: [1; banana | [2; banana | [3; banana | [4; banana | []]]]]
======================================================================
Testing combined list functions
form: [l. append (l; reverse, l)] (6; iota)
norm: [6 | [5 | [4 | [3 | [2 | [1 | [1 | [2 | [3 | [4 | [5 | [6 | []]]]]]]]]]]]]
======================================================================
form: slow-fact (0)
norm: 1
======================================================================
form: slow-fact (1)
norm: 1
======================================================================
form: slow-fact (2)
norm: 2
======================================================================
form: slow-fact (5)
norm: 120
======================================================================
form: 100; iota; sum
norm: 5050
======================================================================
