Testing un-evaluated tests
form: [#p? #a | #b]
norm: [#p? #a | #b]
======================================================================
form: [#p + 1? #a | #b]
norm: [#p + 1? #a | #b]
======================================================================
form: [x. [x? #a | #b]]
norm: [x. [x? #a | #b]]
======================================================================
form: [x, y. [x; y? #a | #b]]
norm: [x, y. [x; y? #a | #b]]
======================================================================
form: [[x. x]? #a | #b]
norm: [[x. x]? #a | #b]
======================================================================
form: [[x. x; 5] (3 + 3)? #a | #b]
norm: [6; 5? #a | #b]
======================================================================
Testing test evaluation
form: [0? #fail | #pass]
norm: #pass
======================================================================
form: [1? #pass | #fail]
norm: #pass
======================================================================
form: [1 - 1? #fail | #pass]
norm: #pass
======================================================================
form: [0 + 1? #pass | #fail]
norm: #pass
======================================================================
form: [[x. x] (0)? #fail | #pass]
norm: #pass
======================================================================
form: [[x. x] (1)? #pass | #fail]
norm: #pass
======================================================================
form: [[0? 0 | 1]? #pass | #fail]
norm: #pass
======================================================================
form: [[0? 0 | 1] - 1? #fail | #pass]
norm: #pass
======================================================================
form: [0? [x, y. x] | [x, y. y]] (#fail, #pass)
norm: #pass
======================================================================
Testing tests with equality primitives
form: [0 == 0? #pass | #fail]
norm: #pass
======================================================================
form: [0 == 1? #fail | #pass]
norm: #pass
======================================================================
form: [1 == 1? #pass | #fail]
norm: #pass
======================================================================
form: [1 == 2? #fail | #pass]
norm: #pass
======================================================================
form: [2 == 1 + 1? #pass | #fail]
norm: #pass
======================================================================
form: [1 + 1 == 2? #pass | #fail]
norm: #pass
======================================================================
form: [0 <> 0? #fail | #pass]
norm: #pass
======================================================================
form: [0 <> 1? #pass | #fail]
norm: #pass
======================================================================
form: [1 <> 1? #fail | #pass]
norm: #pass
======================================================================
form: [1 <> 2? #pass | #fail]
norm: #pass
======================================================================
form: [2 <> 1 + 1? #fail | #pass]
norm: #pass
======================================================================
form: [1 + 1 <> 2? #fail | #pass]
norm: #pass
======================================================================
Testing tests with inequality primitives
form: [1 < 2? #pass | #fail]
norm: #pass
======================================================================
form: [2 < 1? #fail | #pass]
norm: #pass
======================================================================
form: [1 + 1 <= 2? #pass | #fail]
norm: #pass
======================================================================
form: [1 + 1 <= 2 - 1? #fail | #pass]
norm: #pass
======================================================================
form: [0.5 * 2 > 0.75? #pass | #fail]
norm: #pass
======================================================================
form: [-3 > -2.5? #fail | #pass]
norm: #pass
======================================================================
form: [5 * 2 >= 2.5 * 4? #pass | #fail]
norm: #pass
======================================================================
form: [21 <= 6.9 * 3? #fail | #pass]
norm: #pass
======================================================================
Testing test-node substitution and copying
form: [f, x. f (x)] ([y. [y? #pass | #fail]], 0 + 1)
norm: #pass
======================================================================
form: [toggle. 1; toggle; toggle; toggle; toggle] ([b. [b? 0 | 1]])
norm: 1
======================================================================
Testing reduction inside tests
form: [x. [1 + 1 + x? #a | #b]]
norm: [x. [2 + x? #a | #b]]
======================================================================
form: [#t? 1 + 1 | 2 + 2]
norm: [#t? 2 | 4]
======================================================================
form: [n. [#t? 3 * 3 | n + 10]] (5)
norm: [#t? 9 | 15]
======================================================================
form: [f. [#t? 5; f | 2; f; f]] ([n. n * 2])
norm: [#t? 10 | 8]
======================================================================
