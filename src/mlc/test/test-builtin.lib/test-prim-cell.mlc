|* Test primitive cell operations

|============================================== #2XoeNZv7.eL-USfev.SLoDGRWT
|	Require #YGTjJI4S.wsVUUU0D.87x5NaKW (stuck terms)

|* Test primitive cell operations.

Echo "Testing cell primitives: $at".
$at (0, [#pass]).
$at (0, [#pass | #fail]).
$at (1, [#fail | #pass]).
$at (1, [#fail0 | #pass | #fail1]).
[n, c. $at (n, c)] (2, [#fail0 | #fail1 | #pass | #fail2 | #fail3]).
$at (1, [#a | [#b | #c] | #d]).

Echo "Testing cell primitives: $fill".
Echo "XXX need basic tests".
$fill (6, [row. $fill (6, [col. [row | col]])]).

Echo "Testing cell primitives: $fuse".
$fuse ([], []).
$fuse ([], [#a]).
$fuse ([], [#a | #b | #c]).
$fuse ([#b], []).
$fuse ([#b | #c | #d], []).
$fuse ([#a], [#b | #c]).
$fuse ([#a | #b], [#c]).
$fuse ([#a | #b], [#c | #d]).

Echo "Testing cell primitives: $is-cell".
$is-cell ([]).
$is-cell ([#a]).
$is-cell ([#a | #b]).
$is-cell ([#a | #b | #c]).
$is-cell (0).
$is-cell (33).
$is-cell ([x. x]).
$is-cell ($is-cell).
$is-cell (#unknown).

Echo "Testing cell primitives: # (number of elements)".
# [].
# [#a].
# [#a | #b].
# [#a | #b | #c | #d | #e].
# [[#a | #b]].
# 3.
# [x. x].
# #unknown.
# stuck.
