|============================================== #HUQb38wS.uITYRdPK.lfJuJqm6

|* Fibonacci sequence (recursively calculated)

|* The very-inefficient version
fib-slow := [fib! n. [n < 2? n | fib (n - 1) + fib (n - 2)]].

|* The efficient version
fib :=
	let { step := [step! n, a1, a2. [n? step (n - 1, a2, a1 + a2) | a1]] }
	[n. step (n, 0, 1)].

|* These are almost equally efficient in both time and space.
|* Though perhaps one generates more garbage?
fact := [fact! n. [n? n * fact (n - 1) | 1]].
facta := let { step := [step! n, a. [n? step (n - 1, n * a) | a]] }
	[m. step (m, 1)].
